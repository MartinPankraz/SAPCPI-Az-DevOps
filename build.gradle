/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

apply plugin: 'groovy'
apply plugin: 'jacoco'

repositories {
   mavenCentral()
   jcenter()
}

dependencies {
   compile 'org.codehaus.groovy:groovy-all:3.0.2'
   compile group: 'org.osgi', name: 'osgi.core', version: '4.3.1'
   compile fileTree(dir: 'lib', include: ['*.jar'])
   compile group: 'org.opentest4j', name: 'opentest4j', version: '1.2.0'
   
   testCompile 'org.codehaus.groovy:groovy-all:3.0.2'
   testCompile fileTree(dir: 'lib/spock', include: ['*.jar'])
   
   implementation "org.junit.jupiter:junit-jupiter-api:5.3.0"
   testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.0"
}

jar {
	archiveName = "myUtilsPackaged.jar"
	manifest {
		attributes 'Manifest-Version': '1.0'
	}
	into('iFlowUtils/src/main/resources/script/'){
		from file("${buildDir}/classes/groovy/main/iFlowUtils/src/main/resources/script/MyUtilsPackaged.class")
	}
	destinationDir = file("$rootDir/src/main/groovy/TriggerError/src/main/resources/lib")
	
	exclude ("manual/**")
	exclude ("TriggerError/**")
	exclude ("CreateIssueInAzureDevOps/**")
	exclude ("iFlowUtils/**")
	
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled false
		//html.destination file("${buildDir}/reports/jacocoHtml")
	}
	afterEvaluate {
		classDirectories.setFrom files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['CreateIssueInAzureDevOps/**', 'manual/**'])
		})
	}
}
